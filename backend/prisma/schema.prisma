// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id           String          @id @default(uuid())
  username     String          @unique
  password     String
  roles        Role            @default(USER)
  loans        loans[]
  notification notifications[]
  members      members?
}

model members {
  id          String  @id @default(uuid())
  name        String?
  address     String?
  phoneNumber String? @map(name: "phone_number")
  email       String?
  userId      String  @unique
  users       users   @relation(fields: [userId], references: [id])
}

model books {
  id              String  @id @default(uuid())
  title           String
  publisher       String
  publicationYear Int     @map(name: "publication_year")
  author          String
  isbn            String
  synopsis        String
  isActive        Int     @default(1) @map(name: "is_active")
  stock           Int?
  filename        String?
  loans           loans[]
}

model loans {
  id         String    @id @default(uuid())
  loanDate   DateTime  @default(now())
  returnDate DateTime? @db.Date
  isReturned Boolean   @default(false)
  userId     String?   @map(name: "user_id")
  bookId     String?   @map(name: "book_id")

  users        users?          @relation(fields: [userId], references: [id])
  books        books?          @relation(fields: [bookId], references: [id])
  notification notifications[]
}

model notifications {
  id      String   @id @default(uuid())
  message String?
  userId  String?
  loanId  String?
  isRead  Boolean? @default(false)

  users users? @relation(fields: [userId], references: [id])
  loans loans? @relation(fields: [loanId], references: [id])
}

enum Role {
  USER
  ADMIN
}
